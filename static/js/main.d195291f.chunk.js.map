{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","values","touched","errors","resetState","setState","isTextValid","text","search","isUrlValid","url","test","manageTextFieldError","name","value","prevState","manageUrlError","handleChange","event","target","handleBlur","trimmedValue","trim","isFormValid","formHasErrors","Object","some","error","isFormTouched","every","touch","handleSubmit","callback","preventDefault","this","addMovie","props","hasError","onSubmit","type","cn","onChange","onBlur","placeholder","disabled","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d195291f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport cn from 'classnames';\n\nimport { MovieCard } from '../MovieCard';\n\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    values: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    touched: {\n      title: false,\n      description: true,\n      imgUrl: false,\n      imdbUrl: false,\n      imdbId: false,\n    },\n    errors: {\n      title: null,\n      description: null,\n      imgUrl: null,\n      imdbUrl: null,\n      imdbId: null,\n    },\n  };\n\n  resetState = () => {\n    this.setState({\n      values: {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      },\n      touched: {\n        title: false,\n        description: true,\n        imgUrl: false,\n        imdbUrl: false,\n        imdbId: false,\n      },\n      errors: {\n        title: null,\n        description: null,\n        imgUrl: null,\n        imdbUrl: null,\n        imdbId: null,\n      },\n    });\n  }\n\n  isTextValid = (text) => {\n    return (text.search(/\\w/) !== -1);\n  }\n\n  isUrlValid = (url) => {\n    // eslint-disable-next-line max-len\n    const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    return url && pattern.test(url);\n  }\n\n  manageTextFieldError = (name, value) => {\n    if (!this.isTextValid(value)) {\n      this.setState(prevState => ({\n        ...prevState,\n        errors: {\n          ...prevState.errors,\n          [name]: `${name} field should not be empty`,\n        },\n      }));\n    }\n  }\n\n  manageUrlError = (name, value) => {\n    if (!this.isUrlValid(value)) {\n      this.setState(prevState => ({\n        ...prevState,\n        errors: {\n          ...prevState.errors,\n          [name]: `${name} URL should be correct`,\n        },\n      }));\n    }\n  }\n\n  handleChange = (event) => {\n    const { target: { name, value } } = event;\n\n    this.setState(prevState => ({\n      ...prevState,\n      values: {\n        ...prevState.values,\n        [name]: value,\n      },\n      touched: {\n        ...prevState.touched,\n        [name]: true,\n      },\n      errors: {\n        ...prevState.errors,\n        [name]: null,\n      },\n    }));\n  }\n\n  handleBlur = ({ name, value }) => {\n    const trimmedValue = value.trim();\n\n    if (name === 'imgUrl' || name === 'imdbUrl') {\n      if (this.isTextValid(trimmedValue)) {\n        this.manageUrlError(name, trimmedValue);\n      } else {\n        this.manageTextFieldError(name, trimmedValue);\n      }\n    } else {\n      this.manageTextFieldError(name, trimmedValue);\n    }\n  }\n\n  isFormValid = () => {\n    const formHasErrors = Object.values(this.state.errors)\n      .some(error => !!error === true);\n    const isFormTouched = Object.values(this.state.touched)\n      .every(touch => touch === true);\n\n    return !formHasErrors && isFormTouched;\n  }\n\n  handleSubmit = (event, callback, movie) => {\n    event.preventDefault();\n\n    if (this.isFormValid()) {\n      callback(event, movie);\n      this.resetState();\n    }\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state.values;\n\n    const movie = this.state.values;\n    const { addMovie } = this.props;\n\n    const hasError = name => (\n      this.state.errors[name] && this.state.touched[name]\n    );\n\n    return (\n      <form\n        name=\"addMovie\"\n        onSubmit={event => this.handleSubmit(event, addMovie, movie)}\n      >\n        <h1 className=\"form__header\">\n          Add new movie\n        </h1>\n        <label className=\"labelName\">\n          <span className=\"label__title\">\n            Title:\n          </span>\n          <input\n            type=\"text\"\n            name=\"title\"\n            className={cn({ 'wrong-input': hasError('title') })}\n            onChange={event => this.handleChange(event)}\n            onBlur={event => this.handleBlur(event.target)}\n            value={title}\n            placeholder=\"Enter the title\"\n          />\n          {hasError('title')\n            && <span className=\"error\">{this.state.errors.title}</span>}\n        </label>\n        <label className=\"labelName\">\n          <span className=\"label__title\">\n            Description:\n          </span>\n          <input\n            type=\"textarea\"\n            name=\"description\"\n            className={cn({ 'wrong-input': hasError('description') })}\n            onChange={event => this.handleChange(event)}\n            // onBlur={event => this.handleBlur(event.target)}\n            value={description}\n            placeholder=\"Enter the description\"\n          />\n          {hasError('description')\n            && <span className=\"error\">{this.state.errors.description}</span>}\n        </label>\n        <label className=\"labelName\">\n          <span className=\"label__title\">\n            Poster link:\n          </span>\n          <input\n            type=\"text\"\n            name=\"imgUrl\"\n            className={cn({ 'wrong-input': hasError('imgUrl') })}\n            onChange={event => this.handleChange(event)}\n            onBlur={event => this.handleBlur(event.target)}\n            value={imgUrl}\n            placeholder=\"paste the link to poster\"\n          />\n          {hasError('imgUrl')\n            && <span className=\"error\">{this.state.errors.imgUrl}</span>}\n        </label>\n        <label className=\"labelName\">\n          <span className=\"label__title\">\n            IMDB link:\n          </span>\n          <input\n            type=\"text\"\n            name=\"imdbUrl\"\n            className={cn({ 'wrong-input': hasError('imdbUrl') })}\n            onChange={event => this.handleChange(event)}\n            onBlur={event => this.handleBlur(event.target)}\n            value={imdbUrl}\n            placeholder=\"paste the link to IMDB\"\n          />\n          {hasError('imdbUrl')\n            && <span className=\"error\">{this.state.errors.imdbUrl}</span>}\n        </label>\n        <label className=\"labelName\">\n          <span className=\"label__title\">\n            IMDB ID:\n          </span>\n          <input\n            type=\"textarea\"\n            name=\"imdbId\"\n            className={cn({ 'wrong-input': hasError('imdbId') })}\n            onChange={event => this.handleChange(event)}\n            onBlur={event => this.handleBlur(event.target)}\n            value={imdbId}\n            placeholder=\"paste the IMDB ID\"\n          />\n          {hasError('imdbId')\n            && <span className=\"error\">{this.state.errors.imdbId}</span>}\n        </label>\n        <button\n          disabled={!this.isFormValid()}\n          type=\"submit\"\n          className=\"form__submit-button\"\n        >\n          Submit\n        </button>\n\n        <h2 className=\"preview-header\">\n          Preview:\n        </h2>\n\n        <MovieCard key={movie.imdbId} {...movie} />\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (event, movie) => {\n    event.preventDefault();\n\n    this.setState(prevState => ({\n      movies: [\n        movie,\n        ...prevState.movies,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            addMovie={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}