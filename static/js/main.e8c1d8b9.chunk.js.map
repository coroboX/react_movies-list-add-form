{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","values","touched","handleChange","event","target","name","value","setState","prevState","this","addMovie","props","onSubmit","type","onChange","placeholder","Component","App","moviesFromServer","preventDefault","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8c1d8b9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\n\nimport { MovieCard } from '../MovieCard';\n\nexport class NewMovie extends Component {\n  state = {\n    values: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    touched: {\n      title: false,\n      description: false,\n      imgUrl: false,\n      imdbUrl: false,\n      imdbId: false,\n    },\n  };\n\n  handleChange = (event) => {\n    const { target: { name, value } } = event;\n\n    this.setState(prevState => ({\n      ...prevState,\n      values: {\n        ...prevState.values,\n        [name]: value,\n      },\n    }));\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state.values;\n\n    const movie = this.state.values;\n    const { addMovie } = this.props;\n\n    return (\n      <form\n        name=\"addMovie\"\n        onSubmit={event => addMovie(event, movie)}\n      >\n        <h1 className=\"form__header\">\n          Add new movie\n        </h1>\n        <label>\n          <span className=\"label\">\n            Title:\n          </span>\n          <input\n            type=\"text\"\n            name=\"title\"\n            onChange={event => this.handleChange(event)}\n            value={title}\n            placeholder=\"write the title\"\n          />\n        </label>\n        <label>\n          <span className=\"label\">\n            Description:\n          </span>\n          <input\n            type=\"textarea\"\n            name=\"description\"\n            onChange={event => this.handleChange(event)}\n            value={description}\n            placeholder=\"write the description\"\n          />\n        </label>\n        <label>\n          <span className=\"label\">\n            Poster link:\n          </span>\n          <input\n            type=\"text\"\n            name=\"imgUrl\"\n            onChange={event => this.handleChange(event)}\n            value={imgUrl}\n            placeholder=\"paste the link to poster\"\n          />\n        </label>\n        <label>\n          <span className=\"label\">\n            IMDB link:\n          </span>\n          <input\n            type=\"text\"\n            name=\"imdbUrl\"\n            onChange={event => this.handleChange(event)}\n            value={imdbUrl}\n            placeholder=\"paste the link to IMDB\"\n          />\n        </label>\n        <label>\n          <span className=\"label\">\n            Description:\n          </span>\n          <input\n            type=\"textarea\"\n            name=\"imdbId\"\n            onChange={event => this.handleChange(event)}\n            value={imdbId}\n            placeholder=\"paste the IMDB ID\"\n          />\n        </label>\n        <br />\n        <button\n          type=\"submit\"\n          className=\"form__submit-button\"\n        >\n          Submit\n        </button>\n        <br />\n\n        <h2 className=\"preview-header\">\n          Preview:\n        </h2>\n\n        <MovieCard key={movie.imdbId} {...movie} />\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (event, movie) => {\n    event.preventDefault();\n\n    this.setState(prevState => ({\n      movies: [\n        ...prevState.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            addMovie={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}